#
#
#     Written to work as ESPHome firmware.
#     
#     Simply test that all feature of the baord are working, not integrate into toolauth.
#
#
esphome:
  name: v2-current-sensor-test
  project:
    name: "toolauth.hardware"
    version: "1.3.0"

esp32:
  board: az-delivery-devkit-v4
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "PshkQJcQPu6gSwUX/ixnLBue6fTtERWyU3WqokLrh90="
  services:
    - service: play_rtttl
      variables:
        song_str: string
      then:
        - rtttl.play:
            rtttl: !lambda 'return song_str;'

ota:
  password: "d3281c2e8ad00b965c8bbb69717ce993"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "V1-3 board test"
    password: "apJFr4QczITI"

captive_portal:
    
i2c:
  sda: GPIO21
  scl: GPIO22
  
pn532_i2c:
  update_interval: 1s
  
globals:
  - id: device_enabled
    type: bool
    restore_value: no #saves on memory to say no here
    initial_value: 'false'

sensor:
  - platform: ade7953
    irq_pin: GPIO25
    voltage:
      name: test Voltage
    current_a:
      name: test Current B
    current_b:
      name: test Current A
    active_power_a:
      name: test Active Power B
      filters:
        - multiply: -1
    active_power_b:
      name: test Active Power A
      filters:
        - multiply: -1
    update_interval: 60s

light:
  - platform: status_led
    name: "Red LED"
    pin: GPIO32
  - platform: status_led
    name: "Green LED"
    pin: GPIO33
    
output:
  - platform: ledc
    pin: GPIO5
    id: rtttl_out
    
switch:
  - platform: gpio
    pin: GPIO17
    name: "reset relay"
  - platform: gpio
    pin: GPIO16
    name: "set relay"
    # if bypass is already on or off, this does not change the state of bypass.
    on_turn_on:
      - globals.set:
          id: device_enabled
          value: "true"

    on_turn_off:
      - globals.set:
          id: device_enabled
          value: "false"

rtttl:
  output: rtttl_out
  
  #song_str: "mario:d=4,o=5,b=100:16e6,16e6,32p,8e6,16c6,8e6,8g6,8p,8g,8p,8c6,16p,8g,16p,8e,16p,8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,16p,8c6,16p,8g,16p,8e,16p,8a,8b,16a#,8a,16g.,16e6,16g6,8a6,16f6,8g6,8e6,16c6,16d6,8b,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16c7,16p,16c7,16c7,p,16g6,16f#6,16f6,16d#6,16p,16e6,16p,16g#,16a,16c6,16p,16a,16c6,16d6,8p,16d#6,8p,16d6,8p,16c6"
  
binary_sensor:
  - platform: gpio
    pin:
      number: GPIO36
      mode:
        input: true
        # pullup: true
    name: "dip1"
  - platform: gpio
    pin:
      number: GPIO39
      mode:
        input: true
        # pullup: true
    name: "dip2"
  - platform: gpio
    pin:
      number: GPIO34
      mode:
        input: true
        # pullup: true
    name: "dip3"
  - platform: gpio
    pin:
      number: GPIO35
      mode:
        input: true
        # pullup: true
    name: "dip4"
    
    
  - platform: gpio
    id: bypass
    name: "bypass"
    pin:
      number: GPIO26
      mode:
        input: true
    filters:
      - delayed_on: 100ms
      #invert: #inverted in lambda
      - lambda: |-
          if(id(device_enabled) || x){
            return false;
          }else{
            return true;
          }
          
          
  - platform: gpio
    name: "test E-Stop"
    pin:
      number: GPIO27
      inverted: true
      mode:
        input: true
        pullup: false

  - platform: gpio
    name: "2nd E-Stop"
    pin:
      number: GPIO14
      inverted: true
      mode:
        input: true
        pullup: false